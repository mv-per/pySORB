Search.setIndex({"docnames": ["examples/classic_isotherms", "index", "pysorb/_autosummary/pysorb", "pysorb/_autosummary/pysorb.Adsorbent", "pysorb/_autosummary/pysorb.Adsorbent.__init__", "pysorb/_autosummary/pysorb.Adsorbent.atomic_density", "pysorb/_autosummary/pysorb.Adsorbent.name", "pysorb/_autosummary/pysorb.Adsorbent.solid_diameter", "pysorb/_autosummary/pysorb.BaseIsothermModel", "pysorb/_autosummary/pysorb.BaseIsothermModel.__init__", "pysorb/_autosummary/pysorb.BaseIsothermModel.get_deviation", "pysorb/_autosummary/pysorb.BaseIsothermModel.get_loading", "pysorb/_autosummary/pysorb.BaseIsothermModel.get_loadings", "pysorb/_autosummary/pysorb.BaseIsothermModel.get_mixture_loading", "pysorb/_autosummary/pysorb.EmpiricalIsotherms", "pysorb/_autosummary/pysorb.EmpiricalIsotherms.__init__", "pysorb/_autosummary/pysorb.EmpiricalIsotherms.get_deviation", "pysorb/_autosummary/pysorb.EmpiricalIsotherms.get_loading", "pysorb/_autosummary/pysorb.EmpiricalIsotherms.get_loadings", "pysorb/_autosummary/pysorb.EmpiricalIsotherms.get_mixture_loading", "pysorb/_autosummary/pysorb.Fluid", "pysorb/_autosummary/pysorb.Fluid.__init__", "pysorb/_autosummary/pysorb.Fluid.accentric_factor", "pysorb/_autosummary/pysorb.Fluid.critical_compressibility", "pysorb/_autosummary/pysorb.Fluid.critical_pressure", "pysorb/_autosummary/pysorb.Fluid.critical_temperature", "pysorb/_autosummary/pysorb.Fluid.lennard_jonnes_diameter", "pysorb/_autosummary/pysorb.Fluid.name", "pysorb/_autosummary/pysorb.PotentialTheoryModels", "pysorb/_autosummary/pysorb.PotentialTheoryModels.__init__", "pysorb/_autosummary/pysorb.PotentialTheoryModels.get_deviation", "pysorb/_autosummary/pysorb.PotentialTheoryModels.get_loading", "pysorb/_autosummary/pysorb.PotentialTheoryModels.get_loadings", "pysorb/_autosummary/pysorb.PotentialTheoryModels.get_mixture_loading", "pysorb/_autosummary/pysorb.VacancySolutionMethod", "pysorb/_autosummary/pysorb.VacancySolutionMethod.__init__", "pysorb/_autosummary/pysorb.VacancySolutionMethod.get_deviation", "pysorb/_autosummary/pysorb.VacancySolutionMethod.get_loading", "pysorb/_autosummary/pysorb.VacancySolutionMethod.get_loadings", "pysorb/_autosummary/pysorb.VacancySolutionMethod.get_mixture_loading", "pysorb/api", "quick_start/deviation_equations", "quick_start/equations_of_state", "quick_start/fitting", "quick_start/installation"], "filenames": ["examples/classic_isotherms.md", "index.rst", "pysorb/_autosummary/pysorb.rst", "pysorb/_autosummary/pysorb.Adsorbent.rst", "pysorb/_autosummary/pysorb.Adsorbent.__init__.rst", "pysorb/_autosummary/pysorb.Adsorbent.atomic_density.rst", "pysorb/_autosummary/pysorb.Adsorbent.name.rst", "pysorb/_autosummary/pysorb.Adsorbent.solid_diameter.rst", "pysorb/_autosummary/pysorb.BaseIsothermModel.rst", "pysorb/_autosummary/pysorb.BaseIsothermModel.__init__.rst", "pysorb/_autosummary/pysorb.BaseIsothermModel.get_deviation.rst", "pysorb/_autosummary/pysorb.BaseIsothermModel.get_loading.rst", "pysorb/_autosummary/pysorb.BaseIsothermModel.get_loadings.rst", "pysorb/_autosummary/pysorb.BaseIsothermModel.get_mixture_loading.rst", "pysorb/_autosummary/pysorb.EmpiricalIsotherms.rst", "pysorb/_autosummary/pysorb.EmpiricalIsotherms.__init__.rst", "pysorb/_autosummary/pysorb.EmpiricalIsotherms.get_deviation.rst", "pysorb/_autosummary/pysorb.EmpiricalIsotherms.get_loading.rst", "pysorb/_autosummary/pysorb.EmpiricalIsotherms.get_loadings.rst", "pysorb/_autosummary/pysorb.EmpiricalIsotherms.get_mixture_loading.rst", "pysorb/_autosummary/pysorb.Fluid.rst", "pysorb/_autosummary/pysorb.Fluid.__init__.rst", "pysorb/_autosummary/pysorb.Fluid.accentric_factor.rst", "pysorb/_autosummary/pysorb.Fluid.critical_compressibility.rst", "pysorb/_autosummary/pysorb.Fluid.critical_pressure.rst", "pysorb/_autosummary/pysorb.Fluid.critical_temperature.rst", "pysorb/_autosummary/pysorb.Fluid.lennard_jonnes_diameter.rst", "pysorb/_autosummary/pysorb.Fluid.name.rst", "pysorb/_autosummary/pysorb.PotentialTheoryModels.rst", "pysorb/_autosummary/pysorb.PotentialTheoryModels.__init__.rst", "pysorb/_autosummary/pysorb.PotentialTheoryModels.get_deviation.rst", "pysorb/_autosummary/pysorb.PotentialTheoryModels.get_loading.rst", "pysorb/_autosummary/pysorb.PotentialTheoryModels.get_loadings.rst", "pysorb/_autosummary/pysorb.PotentialTheoryModels.get_mixture_loading.rst", "pysorb/_autosummary/pysorb.VacancySolutionMethod.rst", "pysorb/_autosummary/pysorb.VacancySolutionMethod.__init__.rst", "pysorb/_autosummary/pysorb.VacancySolutionMethod.get_deviation.rst", "pysorb/_autosummary/pysorb.VacancySolutionMethod.get_loading.rst", "pysorb/_autosummary/pysorb.VacancySolutionMethod.get_loadings.rst", "pysorb/_autosummary/pysorb.VacancySolutionMethod.get_mixture_loading.rst", "pysorb/api.rst", "quick_start/deviation_equations.md", "quick_start/equations_of_state.md", "quick_start/fitting.md", "quick_start/installation.md"], "titles": ["Classic Isotherms", "PySorb", "pysorb", "pysorb.Adsorbent", "pysorb.Adsorbent.__init__", "pysorb.Adsorbent.atomic_density", "pysorb.Adsorbent.name", "pysorb.Adsorbent.solid_diameter", "pysorb.BaseIsothermModel", "pysorb.BaseIsothermModel.__init__", "pysorb.BaseIsothermModel.get_deviation", "pysorb.BaseIsothermModel.get_loading", "pysorb.BaseIsothermModel.get_loadings", "pysorb.BaseIsothermModel.get_mixture_loading", "pysorb.EmpiricalIsotherms", "pysorb.EmpiricalIsotherms.__init__", "pysorb.EmpiricalIsotherms.get_deviation", "pysorb.EmpiricalIsotherms.get_loading", "pysorb.EmpiricalIsotherms.get_loadings", "pysorb.EmpiricalIsotherms.get_mixture_loading", "pysorb.Fluid", "pysorb.Fluid.__init__", "pysorb.Fluid.accentric_factor", "pysorb.Fluid.critical_compressibility", "pysorb.Fluid.critical_pressure", "pysorb.Fluid.critical_temperature", "pysorb.Fluid.lennard_jonnes_diameter", "pysorb.Fluid.name", "pysorb.PotentialTheoryModels", "pysorb.PotentialTheoryModels.__init__", "pysorb.PotentialTheoryModels.get_deviation", "pysorb.PotentialTheoryModels.get_loading", "pysorb.PotentialTheoryModels.get_loadings", "pysorb.PotentialTheoryModels.get_mixture_loading", "pysorb.VacancySolutionMethod", "pysorb.VacancySolutionMethod.__init__", "pysorb.VacancySolutionMethod.get_deviation", "pysorb.VacancySolutionMethod.get_loading", "pysorb.VacancySolutionMethod.get_loadings", "pysorb.VacancySolutionMethod.get_mixture_loading", "API Reference", "Deviation Equations", "Equations of State", "Fitting", "Installation"], "terms": {"def": 0, "test_get_mixture_loading_two_compon": 0, "setup_fluid": 0, "list": [0, 10, 11, 12, 13, 16, 17, 18, 19, 29, 30, 31, 32, 33, 36, 37, 38, 39], "fluid": [0, 29, 42, 43], "potenti": [0, 1, 28, 29], "str": [0, 4, 10, 15, 16, 21, 29, 30, 35, 36], "co2_param": 0, "float": [0, 4, 10, 11, 12, 13, 16, 17, 18, 19, 21, 30, 31, 32, 33, 36, 37, 38, 39], "ch4_param": 0, "expect": 0, "none": [0, 4, 15, 21, 29, 35], "bulk_composit": [0, 13, 19, 33, 39], "25": 0, "75": 0, "mixture_param": 0, "2": [0, 41, 42, 43], "adsorb": [0, 20, 29, 43], "z01x": 0, "3": [0, 42, 43], "35": 0, "0": [0, 41, 43], "382": 0, "model": [0, 1, 15, 28, 29, 35, 41, 43], "potentialtheorymodel": 0, "pr77": [0, 29, 42], "excess": [0, 29], "555": 0, "calcul": [0, 10, 11, 12, 13, 16, 17, 18, 19, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 43], "get_mixture_load": 0, "1e6": 0, "310": 0, "round": 0, "val": 0, "5": [0, 43], "assert": 0, "len": 0, "instal": 1, "fit": 1, "empir": [1, 15], "isotherm": [1, 10, 11, 12, 13, 15, 16, 17, 18, 19, 30, 31, 32, 33, 36, 37, 38, 39, 41], "vacanc": 1, "solut": 1, "method": [1, 3, 8, 14, 15, 20, 28, 34, 35, 42], "theori": [1, 28], "deviat": [1, 10, 16, 30, 36], "equat": [1, 29, 43], "support": [1, 43], "state": [1, 29], "classic": [1, 43], "api": 2, "class": [2, 3, 8, 14, 20, 28, 29, 34], "The": [3, 4, 5, 7, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 41, 42, 43], "system": [3, 29, 41, 42], "": [3, 29, 43], "attribut": [3, 20], "arg": [4, 9, 21, 29], "kwarg": [4, 9, 21, 29], "overload": [4, 21, 29], "function": [4, 10, 16, 21, 29, 30, 36], "self": [4, 10, 11, 12, 13, 15, 16, 17, 18, 19, 21, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39], "initi": [4, 15, 21, 29, 35], "base": [4, 21, 28, 43], "adsob": 4, "name": [4, 10, 16, 21, 30, 36], "diamet": [4, 7, 21, 26, 43], "atomic_dens": 4, "return": [4, 10, 11, 12, 13, 16, 17, 18, 19, 21, 29, 30, 31, 32, 33, 36, 37, 38, 39], "given": [4, 11, 12, 13, 17, 18, 19, 31, 32, 33, 37, 38, 39], "param": [4, 21, 29], "type": [4, 10, 11, 12, 13, 16, 17, 18, 19, 21, 29, 30, 31, 32, 33, 36, 37, 38, 39], "wall": [4, 43], "angstrom": [4, 5, 7, 21, 26, 43], "atom": [4, 5, 43], "densiti": [4, 5, 43], "unit": [4, 43], "rtype": [4, 21, 29], "properti": [5, 6, 7, 22, 23, 24, 25, 26, 27, 42, 43], "surfac": [5, 7, 29, 43], "sq": 5, "lennard": [7, 21, 26, 43], "jonn": [7, 21, 26, 43], "pressur": [10, 11, 12, 13, 16, 17, 18, 19, 21, 24, 30, 31, 32, 33, 36, 37, 38, 39], "std": [10, 11, 12, 13, 16, 17, 18, 19, 29, 30, 31, 32, 33, 36, 37, 38, 39], "vector": [10, 11, 12, 13, 16, 17, 18, 19, 29, 30, 31, 32, 33, 36, 37, 38, 39], "doubl": [10, 11, 12, 13, 16, 17, 18, 19, 30, 31, 32, 33, 36, 37, 38, 39], "alloc": [10, 11, 12, 13, 16, 17, 18, 19, 29, 30, 31, 32, 33, 36, 37, 38, 39], "experimentalload": [10, 16, 30, 36], "temperatur": [10, 11, 12, 13, 16, 17, 18, 19, 21, 25, 30, 31, 32, 33, 36, 37, 38, 39, 43], "paramet": [10, 11, 12, 13, 15, 16, 17, 18, 19, 30, 31, 32, 33, 35, 36, 37, 38, 39, 43], "deviationequ": [10, 16, 30, 36], "between": [10, 16, 29, 30, 36, 43], "experiment": [10, 16, 30, 36], "load": [10, 11, 12, 13, 16, 17, 18, 19, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 43], "us": [10, 16, 29, 30, 36, 43, 44], "specifi": [10, 16, 30, 36], "valu": [10, 11, 12, 13, 16, 17, 18, 19, 30, 31, 32, 33, 36, 37, 38, 39], "pa": [10, 11, 12, 13, 16, 17, 18, 19, 21, 30, 31, 32, 33, 36, 37, 38, 39, 43], "experimental_load": [10, 16, 30, 36], "mol": [10, 11, 12, 16, 17, 18, 30, 31, 32, 36, 37, 38, 43], "kg": [10, 11, 12, 16, 17, 18, 30, 31, 32, 36, 37, 38, 43], "k": [10, 11, 12, 13, 16, 17, 18, 19, 21, 30, 31, 32, 33, 36, 37, 38, 39, 41, 43], "deviation_equ": [10, 16, 30, 36], "bulkcomposit": [13, 19, 33, 39], "partial": [13, 19, 33, 39], "bulk": [13, 19, 33, 39, 43], "composit": [13, 19, 33, 39], "activ": [15, 35, 43], "coeffici": [15, 35, 43], "section": 15, "baseisothermmodel": [16, 17, 18, 19, 30, 31, 32, 33, 36, 37, 38, 39], "critical_pressur": 21, "critical_temperatur": 21, "accentric_factor": 21, "critical_compress": 21, "lennard_jonnes_diamet": 21, "critic": [21, 23, 24, 25, 42], "compress": [21, 23], "accentr": [21, 22], "factor": [21, 22], "pascal": 24, "kelvin": 25, "multicompon": [28, 29, 42, 43], "adsorpt": [28, 29, 41, 43], "equation_of_st": 29, "isotherm_typ": 29, "num_of_lay": 29, "int": 29, "data": 29, "option": [29, 35], "dra": [29, 43], "lee": [29, 43], "steel": [29, 43], "srk": [29, 42], "peneloux": [29, 42], "absolut": [29, 41], "number": 29, "layer": 29, "solid": [29, 43], "gibb": 29, "interfac": [29, 43], "simul": 29, "without": 29, "monocompon": 29, "wilson": [35, 43], "nrtl": [35, 43], "flori": [35, 43], "huggin": [35, 43], "follow": [41, 43], "ar": [41, 43], "current": [41, 43], "1": [41, 42, 43], "sum": 41, "squar": 41, "error": 41, "sse": 41, "sigma": 41, "sum_": [41, 43], "i": [41, 43], "n": [41, 43], "dfrac": [41, 43], "calc": 41, "exp": [41, 43], "averag": 41, "rel": 41, "frac": 41, "100": 41, "time": 41, "left": [41, 43], "right": [41, 43], "eab": 41, "rab": 41, "hybrid": 41, "mean": 41, "percentag": 41, "standard": 41, "mpsd": 41, "sqrt": 41, "sre": 41, "sigma_": [41, 43], "chi": [41, 43], "chi_2": 41, "residu": 41, "r_": 41, "6": [41, 42, 43], "cdot": 41, "foo": 41, "y": 41, "hame": 41, "b": [41, 42, 43], "h": [41, 43], "2010": 41, "insight": 41, "chemic": [41, 42, 43], "engin": [41, 42, 43], "journal": [41, 42, 43], "156": 41, "10": [41, 42, 43], "doi": [41, 42, 43], "1016": [41, 42, 43], "j": [41, 43], "cej": 41, "2009": 41, "09": 41, "013": 41, "origin": 42, "peng": 42, "robinson": 42, "soav": 42, "redlich": [42, 43], "kwong": 42, "volum": [42, 43], "translat": 42, "srl": 42, "d": [42, 43], "1977": 42, "A": [42, 43], "rigor": 42, "predict": 42, "from": 42, "an": [42, 43], "aich": [42, 43], "23": 42, "137": 42, "144": 42, "1002": [42, 43], "aic": [42, 43], "690230202": 42, "g": [42, 43], "1972": 42, "equilibrium": [42, 43], "constant": [42, 43], "modifi": 42, "scienc": [42, 43], "27": 42, "1197": 42, "1203": 42, "0009": 42, "2509": 42, "72": 42, "80096": 42, "4": [42, 43], "p\u00e9neloux": 42, "rauzi": 42, "e": [42, 43], "fr\u00e9ze": 42, "r": [42, 43], "1982": 42, "consist": 42, "correct": 42, "phase": [42, 43], "equilibria": [42, 43], "8": [42, 43], "7": [42, 43], "0378": 42, "3812": 42, "82": 42, "80002": 42, "f": 43, "p": 43, "t": 43, "code": 43, "freundlich": 43, "kp": 43, "depend": 43, "k_0": 43, "alpha": 43, "a_0": 43, "rt": 43, "f_n": 43, "langmuir": 43, "n_": 43, "max": 43, "bp": 43, "b_": 43, "infti": 43, "q": 43, "dual": 43, "b_1": 43, "b_2": 43, "b_1p": 43, "b_2p": 43, "sip": 43, "_": 43, "depent": 43, "t_0": 43, "b_0": 43, "298": 43, "15": 43, "toth": 43, "tfrac": 43, "unilan": 43, "bar": 43, "2t": 43, "ln": 43, "tp": 43, "keller": 43, "staudt": 43, "alpha_m": 43, "beta_0": 43, "alpha_mbp": 43, "peterson": 43, "perterson": 43, "jensen": 43, "seaton": 43, "kappa": 43, "theta": 43, "optim": 43, "alpha_": 43, "v1": 43, "1v": 43, "tau_": 43, "g_": 43, "take": 43, "account": 43, "vari": 43, "within": 43, "mu_": 43, "ad": 43, "varepsilon_z": 43, "appli": 43, "iso": 43, "fugac": 43, "rule": 43, "we": 43, "have": 43, "f_": 43, "p_z": 43, "p_b": 43, "abov": 43, "solv": 43, "all": 43, "z": 43, "integr": 43, "ex": 43, "int_0": 43, "rho_": 43, "ab": 43, "so": 43, "each": 43, "step": 43, "must": 43, "pysorb": [43, 44], "dubinin": 43, "radushkevich": 43, "astakhov": 43, "varepsilon_0": 43, "z_0": 43, "beta": 43, "varepsilon": 43, "varepsilon_": 43, "l": 43, "two": 43, "ha": 43, "shape": 43, "similar": 43, "colis": 43, "ff": 43, "ss": 43, "epsilon_": 43, "k_b": 43, "boltzmann": 43, "psi": 43, "pi": 43, "5z": 43, "psi_z": 43, "psi_": 43, "k_": 43, "int_": 43, "delta": 43, "61": 43, "do": 43, "duong": 43, "analysi": 43, "kinet": 43, "vol": 43, "world": 43, "scientif": 43, "1998": 43, "suwanayuen": 43, "danner": 43, "1980": 43, "ga": 43, "26": 43, "68": 43, "76": 43, "690260112": 43, "munakata": 43, "2007": 43, "formul": 43, "correl": 43, "japan": 43, "40": 43, "398": 43, "409": 43, "1252": 43, "jcej": 43, "cochran": 43, "w": 43, "kabel": 43, "1985": 43, "31": 43, "268": 43, "277": 43, "690310214": 43, "shapiro": 43, "stenbi": 43, "colloid": 43, "201": 43, "146": 43, "157": 43, "1006": 43, "jci": 43, "5424": 43, "m": 43, "1983": 43, "micropor": 43, "structur": 43, "absorpt": 43, "carbonac": 43, "carbon": 43, "21": 43, "359": 43, "366": 43, "0008": 43, "6223": 43, "83": 43, "90128": 43, "lloyd": 43, "molecular": 43, "thermodynam": 43, "nonid": 43, "butterworth": 43, "heinemann": 43, "1988": 43, "1973": 43, "physic": 43, "interact": 43, "gase": 43, "crystallin": 43, "39": 43, "149": 43, "175": 43, "0039": 43, "6028": 43, "73": 43, "90102": 43, "you": 44, "can": 44, "pip": 44}, "objects": {"": [[2, 0, 0, "-", "pysorb"]], "pysorb": [[3, 1, 1, "", "Adsorbent"], [8, 1, 1, "", "BaseIsothermModel"], [14, 1, 1, "", "EmpiricalIsotherms"], [20, 1, 1, "", "Fluid"], [28, 1, 1, "", "PotentialTheoryModels"], [34, 1, 1, "", "VacancySolutionMethod"]], "pysorb.Adsorbent": [[4, 2, 1, "", "__init__"], [5, 3, 1, "", "atomic_density"], [6, 3, 1, "", "name"], [7, 3, 1, "", "solid_diameter"]], "pysorb.BaseIsothermModel": [[9, 2, 1, "", "__init__"], [10, 2, 1, "", "get_deviation"], [11, 2, 1, "", "get_loading"], [12, 2, 1, "", "get_loadings"], [13, 2, 1, "", "get_mixture_loading"]], "pysorb.EmpiricalIsotherms": [[15, 2, 1, "", "__init__"], [16, 2, 1, "", "get_deviation"], [17, 2, 1, "", "get_loading"], [18, 2, 1, "", "get_loadings"], [19, 2, 1, "", "get_mixture_loading"]], "pysorb.Fluid": [[21, 2, 1, "", "__init__"], [22, 3, 1, "", "accentric_factor"], [23, 3, 1, "", "critical_compressibility"], [24, 3, 1, "", "critical_pressure"], [25, 3, 1, "", "critical_temperature"], [26, 3, 1, "", "lennard_jonnes_diameter"], [27, 3, 1, "", "name"]], "pysorb.PotentialTheoryModels": [[29, 2, 1, "", "__init__"], [30, 2, 1, "", "get_deviation"], [31, 2, 1, "", "get_loading"], [32, 2, 1, "", "get_loadings"], [33, 2, 1, "", "get_mixture_loading"]], "pysorb.VacancySolutionMethod": [[35, 2, 1, "", "__init__"], [36, 2, 1, "", "get_deviation"], [37, 2, 1, "", "get_loading"], [38, 2, 1, "", "get_loadings"], [39, 2, 1, "", "get_mixture_loading"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"]}, "titleterms": {"classic": 0, "isotherm": [0, 43], "pysorb": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39], "get": 1, "start": 1, "exampl": 1, "api": [1, 40], "refer": [1, 40, 41, 42], "adsorb": [3, 4, 5, 6, 7], "__init__": [4, 9, 15, 21, 29, 35], "atomic_dens": 5, "name": [6, 27], "solid_diamet": 7, "baseisothermmodel": [8, 9, 10, 11, 12, 13], "get_devi": [10, 16, 30, 36], "get_load": [11, 12, 17, 18, 31, 32, 37, 38], "get_mixture_load": [13, 19, 33, 39], "empiricalisotherm": [14, 15, 16, 17, 18, 19], "fluid": [20, 21, 22, 23, 24, 25, 26, 27], "accentric_factor": 22, "critical_compress": 23, "critical_pressur": 24, "critical_temperatur": 25, "lennard_jonnes_diamet": 26, "potentialtheorymodel": [28, 29, 30, 31, 32, 33], "vacancysolutionmethod": [34, 35, 36, 37, 38, 39], "deviat": 41, "equat": [41, 42], "support": 41, "state": 42, "fit": 43, "empir": 43, "vacanc": 43, "solut": 43, "method": 43, "potenti": 43, "theori": 43, "models5": 43, "instal": 44}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "nbsphinx": 4, "sphinx": 57}, "alltitles": {"Classic Isotherms": [[0, "classic-isotherms"]], "PySorb": [[1, "pysorb"]], "Getting started": [[1, null]], "Examples": [[1, null]], "API Reference": [[1, null], [40, "api-reference"]], "pysorb": [[2, "module-pysorb"]], "pysorb.Adsorbent": [[3, "pysorb-adsorbent"]], "pysorb.Adsorbent.__init__": [[4, "pysorb-adsorbent-init"]], "pysorb.Adsorbent.atomic_density": [[5, "pysorb-adsorbent-atomic-density"]], "pysorb.Adsorbent.name": [[6, "pysorb-adsorbent-name"]], "pysorb.Adsorbent.solid_diameter": [[7, "pysorb-adsorbent-solid-diameter"]], "pysorb.BaseIsothermModel": [[8, "pysorb-baseisothermmodel"]], "pysorb.BaseIsothermModel.__init__": [[9, "pysorb-baseisothermmodel-init"]], "pysorb.BaseIsothermModel.get_deviation": [[10, "pysorb-baseisothermmodel-get-deviation"]], "pysorb.BaseIsothermModel.get_loading": [[11, "pysorb-baseisothermmodel-get-loading"]], "pysorb.BaseIsothermModel.get_loadings": [[12, "pysorb-baseisothermmodel-get-loadings"]], "pysorb.BaseIsothermModel.get_mixture_loading": [[13, "pysorb-baseisothermmodel-get-mixture-loading"]], "pysorb.EmpiricalIsotherms": [[14, "pysorb-empiricalisotherms"]], "pysorb.EmpiricalIsotherms.__init__": [[15, "pysorb-empiricalisotherms-init"]], "pysorb.EmpiricalIsotherms.get_deviation": [[16, "pysorb-empiricalisotherms-get-deviation"]], "pysorb.EmpiricalIsotherms.get_loading": [[17, "pysorb-empiricalisotherms-get-loading"]], "pysorb.EmpiricalIsotherms.get_loadings": [[18, "pysorb-empiricalisotherms-get-loadings"]], "pysorb.EmpiricalIsotherms.get_mixture_loading": [[19, "pysorb-empiricalisotherms-get-mixture-loading"]], "pysorb.Fluid": [[20, "pysorb-fluid"]], "pysorb.Fluid.__init__": [[21, "pysorb-fluid-init"]], "pysorb.Fluid.accentric_factor": [[22, "pysorb-fluid-accentric-factor"]], "pysorb.Fluid.critical_compressibility": [[23, "pysorb-fluid-critical-compressibility"]], "pysorb.Fluid.critical_pressure": [[24, "pysorb-fluid-critical-pressure"]], "pysorb.Fluid.critical_temperature": [[25, "pysorb-fluid-critical-temperature"]], "pysorb.Fluid.lennard_jonnes_diameter": [[26, "pysorb-fluid-lennard-jonnes-diameter"]], "pysorb.Fluid.name": [[27, "pysorb-fluid-name"]], "pysorb.PotentialTheoryModels": [[28, "pysorb-potentialtheorymodels"]], "pysorb.PotentialTheoryModels.__init__": [[29, "pysorb-potentialtheorymodels-init"]], "pysorb.PotentialTheoryModels.get_deviation": [[30, "pysorb-potentialtheorymodels-get-deviation"]], "pysorb.PotentialTheoryModels.get_loading": [[31, "pysorb-potentialtheorymodels-get-loading"]], "pysorb.PotentialTheoryModels.get_loadings": [[32, "pysorb-potentialtheorymodels-get-loadings"]], "pysorb.PotentialTheoryModels.get_mixture_loading": [[33, "pysorb-potentialtheorymodels-get-mixture-loading"]], "pysorb.VacancySolutionMethod": [[34, "pysorb-vacancysolutionmethod"]], "pysorb.VacancySolutionMethod.__init__": [[35, "pysorb-vacancysolutionmethod-init"]], "pysorb.VacancySolutionMethod.get_deviation": [[36, "pysorb-vacancysolutionmethod-get-deviation"]], "pysorb.VacancySolutionMethod.get_loading": [[37, "pysorb-vacancysolutionmethod-get-loading"]], "pysorb.VacancySolutionMethod.get_loadings": [[38, "pysorb-vacancysolutionmethod-get-loadings"]], "pysorb.VacancySolutionMethod.get_mixture_loading": [[39, "pysorb-vacancysolutionmethod-get-mixture-loading"]], "Deviation Equations": [[41, "deviation-equations"]], "Supported Deviation Equations": [[41, "supported-deviation-equations"]], "References": [[41, "references"], [42, "references"]], "Equations of State": [[42, "equations-of-state"]], "Fitting": [[43, "fitting"]], "Empirical isotherms": [[43, "empirical-isotherms"]], "Vacancy Solution Method": [[43, "vacancy-solution-method"]], "Potential Theory Models5": [[43, "potential-theory-models"]], "Installation": [[44, "installation"]]}, "indexentries": {"module": [[2, "module-pysorb"]], "pysorb": [[2, "module-pysorb"]], "adsorbent (class in pysorb)": [[3, "pysorb.Adsorbent"]], "__init__() (pysorb.adsorbent method)": [[4, "pysorb.Adsorbent.__init__"]], "atomic_density (pysorb.adsorbent property)": [[5, "pysorb.Adsorbent.atomic_density"]], "name (pysorb.adsorbent property)": [[6, "pysorb.Adsorbent.name"]], "solid_diameter (pysorb.adsorbent property)": [[7, "pysorb.Adsorbent.solid_diameter"]], "baseisothermmodel (class in pysorb)": [[8, "pysorb.BaseIsothermModel"]], "__init__() (pysorb.baseisothermmodel method)": [[9, "pysorb.BaseIsothermModel.__init__"]], "get_deviation() (pysorb.baseisothermmodel method)": [[10, "pysorb.BaseIsothermModel.get_deviation"]], "get_loading() (pysorb.baseisothermmodel method)": [[11, "pysorb.BaseIsothermModel.get_loading"]], "get_loadings() (pysorb.baseisothermmodel method)": [[12, "pysorb.BaseIsothermModel.get_loadings"]], "get_mixture_loading() (pysorb.baseisothermmodel method)": [[13, "pysorb.BaseIsothermModel.get_mixture_loading"]], "empiricalisotherms (class in pysorb)": [[14, "pysorb.EmpiricalIsotherms"]], "__init__() (pysorb.empiricalisotherms method)": [[15, "pysorb.EmpiricalIsotherms.__init__"]], "get_deviation() (pysorb.empiricalisotherms method)": [[16, "pysorb.EmpiricalIsotherms.get_deviation"]], "get_loading() (pysorb.empiricalisotherms method)": [[17, "pysorb.EmpiricalIsotherms.get_loading"]], "get_loadings() (pysorb.empiricalisotherms method)": [[18, "pysorb.EmpiricalIsotherms.get_loadings"]], "get_mixture_loading() (pysorb.empiricalisotherms method)": [[19, "pysorb.EmpiricalIsotherms.get_mixture_loading"]], "fluid (class in pysorb)": [[20, "pysorb.Fluid"]], "__init__() (pysorb.fluid method)": [[21, "pysorb.Fluid.__init__"]], "accentric_factor (pysorb.fluid property)": [[22, "pysorb.Fluid.accentric_factor"]], "critical_compressibility (pysorb.fluid property)": [[23, "pysorb.Fluid.critical_compressibility"]], "critical_pressure (pysorb.fluid property)": [[24, "pysorb.Fluid.critical_pressure"]], "critical_temperature (pysorb.fluid property)": [[25, "pysorb.Fluid.critical_temperature"]], "lennard_jonnes_diameter (pysorb.fluid property)": [[26, "pysorb.Fluid.lennard_jonnes_diameter"]], "name (pysorb.fluid property)": [[27, "pysorb.Fluid.name"]], "potentialtheorymodels (class in pysorb)": [[28, "pysorb.PotentialTheoryModels"]], "__init__() (pysorb.potentialtheorymodels method)": [[29, "pysorb.PotentialTheoryModels.__init__"]], "get_deviation() (pysorb.potentialtheorymodels method)": [[30, "pysorb.PotentialTheoryModels.get_deviation"]], "get_loading() (pysorb.potentialtheorymodels method)": [[31, "pysorb.PotentialTheoryModels.get_loading"]], "get_loadings() (pysorb.potentialtheorymodels method)": [[32, "pysorb.PotentialTheoryModels.get_loadings"]], "get_mixture_loading() (pysorb.potentialtheorymodels method)": [[33, "pysorb.PotentialTheoryModels.get_mixture_loading"]], "vacancysolutionmethod (class in pysorb)": [[34, "pysorb.VacancySolutionMethod"]], "__init__() (pysorb.vacancysolutionmethod method)": [[35, "pysorb.VacancySolutionMethod.__init__"]], "get_deviation() (pysorb.vacancysolutionmethod method)": [[36, "pysorb.VacancySolutionMethod.get_deviation"]], "get_loading() (pysorb.vacancysolutionmethod method)": [[37, "pysorb.VacancySolutionMethod.get_loading"]], "get_loadings() (pysorb.vacancysolutionmethod method)": [[38, "pysorb.VacancySolutionMethod.get_loadings"]], "get_mixture_loading() (pysorb.vacancysolutionmethod method)": [[39, "pysorb.VacancySolutionMethod.get_mixture_loading"]]}})